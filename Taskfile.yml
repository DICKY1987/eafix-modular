version: '3'

tasks:
  up:
    desc: Start all services with Docker Compose
    cmds:
      - docker compose -f deploy/compose/docker-compose.yml up -d --build

  down:
    desc: Stop all services
    cmds:
      - docker compose -f deploy/compose/docker-compose.yml down

  test:
    desc: Run full test suite
    cmds:
      - poetry run pytest

  lint:
    desc: Run linting and type checks
    cmds:
      - poetry run flake8 services/
      - poetry run mypy services/*/src

  build:
    desc: Build all service images
    cmds:
      - docker compose -f deploy/compose/docker-compose.yml build

  sbom:
    desc: Generate Software Bill of Materials
    cmds:
      - echo "SBOM generation placeholder - requires syft installation"
      - echo "Would run: syft packages dir:. -o json > sbom.json"

  release-dry:
    desc: Dry run release validation
    cmds:
      - echo "✓ Branch protection check"
      - echo "✓ Taskfile targets available" 
      - echo "✓ Docker compose configuration valid"

  contracts-validate:
    desc: Validate JSON schemas
    cmds:
      - python ci/validate_schemas.py

  smoke:
    desc: Run smoke tests
    cmds:
      - python ci/smoke_test.py

  install:
    desc: Install dependencies and pre-commit hooks
    cmds:
      - poetry install
      - poetry run pre-commit install

  format:
    desc: Format code with black and isort
    cmds:
      - poetry run black services/
      - poetry run isort services/

  docker-logs:
    desc: Follow container logs
    cmds:
      - docker compose -f deploy/compose/docker-compose.yml logs -f

  gaps-check:
    desc: Review production readiness gaps
    cmds:
      - echo "=== Gap Register Review ==="
      - type docs\gaps\GAP_REGISTER.md
      - echo ""
      - echo "=== SLO Status ==="
      - type docs\gaps\slo\SLOs.md
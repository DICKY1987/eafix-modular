version: '3.8'

services:
  # Message Bus
  redis:
    image: redis:7-alpine@sha256:de13e74e14b98eb96bdf886791ae47686c3c5d29f9d5f85ea55206843e3fce26
    container_name: eafix-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database
  postgres:
    image: postgres:15-alpine@sha256:c5b2b4b97db8cc4fa4a6aba8e5d4e0d67db1e96a7d8d1e4c37a7f7f90c0a5b10
    container_name: eafix-postgres
    environment:
      POSTGRES_DB: eafix_trading
      POSTGRES_USER: eafix
      POSTGRES_PASSWORD: eafix_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eafix -d eafix_trading"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Data Ingestor Service
  data-ingestor:
    build:
      context: ../../services/data-ingestor
      dockerfile: Dockerfile
    container_name: eafix-data-ingestor
    environment:
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8081:8080"
    volumes:
      - ./config:/app/config:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/readyz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Indicator Engine Service  
  indicator-engine:
    build:
      context: ../../services/indicator-engine
      dockerfile: Dockerfile
    container_name: eafix-indicator-engine
    environment:
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy
      data-ingestor:
        condition: service_healthy
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/readyz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Signal Generator Service
  signal-generator:
    build:
      context: ../../services/signal-generator
      dockerfile: Dockerfile
    container_name: eafix-signal-generator
    environment:
      - REDIS_URL=redis://redis:6379
      - RISK_MANAGER_URL=http://risk-manager:8080
      - LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy
      indicator-engine:
        condition: service_healthy
    ports:
      - "8083:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/readyz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Risk Manager Service
  risk-manager:
    build:
      context: ../../services/risk-manager
      dockerfile: Dockerfile
    container_name: eafix-risk-manager
    environment:
      - DATABASE_URL=postgresql://eafix:eafix_password@postgres:5432/eafix_trading
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8084:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/readyz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Execution Engine Service
  execution-engine:
    build:
      context: ../../services/execution-engine
      dockerfile: Dockerfile
    container_name: eafix-execution-engine
    environment:
      - DATABASE_URL=postgresql://eafix:eafix_password@postgres:5432/eafix_trading
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
      risk-manager:
        condition: service_healthy
    ports:
      - "8085:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/readyz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Calendar Ingestor Service
  calendar-ingestor:
    build:
      context: ../../services/calendar-ingestor
      dockerfile: Dockerfile
    container_name: eafix-calendar-ingestor
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://eafix:eafix_password@postgres:5432/eafix_trading
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8086:8080"
    volumes:
      - ./calendar_data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/readyz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Reentry Matrix Service
  reentry-matrix-svc:
    build:
      context: ../../services/reentry-matrix-svc
      dockerfile: Dockerfile
    container_name: eafix-reentry-matrix
    environment:
      - DATABASE_URL=postgresql://eafix:eafix_password@postgres:5432/eafix_trading
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8087:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/readyz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Reporter Service
  reporter:
    build:
      context: ../../services/reporter
      dockerfile: Dockerfile
    container_name: eafix-reporter
    environment:
      - DATABASE_URL=postgresql://eafix:eafix_password@postgres:5432/eafix_trading
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8088:8080"
    volumes:
      - ./reports:/app/reports
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/readyz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # GUI Gateway Service
  gui-gateway:
    build:
      context: ../../services/gui-gateway
      dockerfile: Dockerfile
    container_name: eafix-gui-gateway
    environment:
      - REDIS_URL=redis://redis:6379
      - SIGNAL_GENERATOR_URL=http://signal-generator:8080
      - RISK_MANAGER_URL=http://risk-manager:8080
      - EXECUTION_ENGINE_URL=http://execution-engine:8080
      - REPORTER_URL=http://reporter:8080
      - LOG_LEVEL=INFO
    depends_on:
      signal-generator:
        condition: service_healthy
      risk-manager:
        condition: service_healthy
      execution-engine:
        condition: service_healthy
      reporter:
        condition: service_healthy
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/readyz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Compliance Monitoring Service
  compliance-monitor:
    build:
      context: ../../services/compliance-monitor
      dockerfile: Dockerfile
    container_name: eafix-compliance-monitor
    environment:
      - REDIS_URL=redis://redis:6379
      - TRADING_API_BASE=http://gui-gateway:8080/api/v1
      - ALERTMANAGER_WEBHOOK_SECRET=${ALERTMANAGER_WEBHOOK_SECRET:-}
      - LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy
      alertmanager:
        condition: service_healthy
    ports:
      - "8089:8080"  # Webhook endpoint
      - "9201:9201"  # Metrics endpoint
    volumes:
      - ../../compliance/config:/app/compliance/config:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Monitoring Infrastructure
  prometheus:
    image: prom/prometheus:v2.48.1@sha256:f6639335d34a77d9d9db382b92eeb7fc00934be8eae81dbc03b31cfe90411a05
    container_name: eafix-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../../observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ../../observability/rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--log.level=info'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  alertmanager:
    image: prom/alertmanager:v0.26.0@sha256:e13b6ed5cb929eeaee733479dce55e10eb3bc2e9c4586c705a4e8d41e9304318
    container_name: eafix-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ../../observability/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--log.level=info'
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:10.2.3@sha256:195f23f4ea0a0c76ade82f4d6d81abec6b2cdb6fc4b6c94b79a0c4b8aaffe0c7
    container_name: eafix-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=eafix_trading_2025
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_FEATURE_TOGGLES_ENABLE=accesscontrol
    volumes:
      - grafana_data:/var/lib/grafana
      - ../../observability/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Infrastructure Exporters
  redis-exporter:
    image: oliver006/redis_exporter:v1.55.0@sha256:8f970671fb09a7b02e5da0feaa46e8c90b0e8c6c0e0f4b9b0b0b0b0b0b0b0b0b
    container_name: eafix-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9121/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:v0.15.0@sha256:2b6c6b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b
    container_name: eafix-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://eafix:eafix_password@postgres:5432/eafix_trading?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9187/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  node-exporter:
    image: prom/node-exporter:v1.7.0@sha256:abe24ad63c8d32c5f5c863d42bb4b1b8c7a3a6e2de9c4d37f0e3d44d8a0b2b1a
    container_name: eafix-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys' 
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9100/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0@sha256:8c5b2e5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b
    container_name: eafix-blackbox-exporter
    ports:
      - "9115:9115"
    volumes:
      - ../../observability/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9115/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:
  alertmanager_data:

networks:
  default:
    name: eafix-network
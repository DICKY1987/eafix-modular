---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calendar-ingestor
  namespace: eafix-trading
  labels:
    app.kubernetes.io/name: calendar-ingestor
    app.kubernetes.io/component: calendar
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/part-of: eafix-trading-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: calendar-ingestor
  template:
    metadata:
      labels:
        app.kubernetes.io/name: calendar-ingestor
        app.kubernetes.io/component: calendar
        app.kubernetes.io/version: "0.1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8086"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: calendar-ingestor
        image: ghcr.io/dicky1987/eafix-modular/calendar-ingestor:v0.1.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8086
          name: http
        env:
        - name: SERVICE_REDIS_URL
          value: "redis://redis:6379"
        - name: SERVICE_LOG_LEVEL
          value: "INFO"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: trading-secrets
              key: REDIS_PASSWORD
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8086
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8086
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "300m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reentry-matrix-svc
  namespace: eafix-trading
  labels:
    app.kubernetes.io/name: reentry-matrix-svc
    app.kubernetes.io/component: reentry
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/part-of: eafix-trading-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: reentry-matrix-svc
  template:
    metadata:
      labels:
        app.kubernetes.io/name: reentry-matrix-svc
        app.kubernetes.io/component: reentry
        app.kubernetes.io/version: "0.1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8087"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: reentry-matrix-svc
        image: ghcr.io/dicky1987/eafix-modular/reentry-matrix-svc:v0.1.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8087
          name: http
        env:
        - name: SERVICE_REDIS_URL
          value: "redis://redis:6379"
        - name: SERVICE_LOG_LEVEL
          value: "INFO"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: trading-secrets
              key: REDIS_PASSWORD
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8087
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8087
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "150m"
          limits:
            memory: "512Mi"
            cpu: "400m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reporter
  namespace: eafix-trading
  labels:
    app.kubernetes.io/name: reporter
    app.kubernetes.io/component: reporting
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/part-of: eafix-trading-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: reporter
        app.kubernetes.io/component: reporting
        app.kubernetes.io/version: "0.1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8088"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: reporter
        image: ghcr.io/dicky1987/eafix-modular/reporter:v0.1.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8088
          name: http
        env:
        - name: SERVICE_REDIS_URL
          value: "redis://redis:6379"
        - name: SERVICE_POSTGRES_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/$(POSTGRES_DB)"
        - name: SERVICE_LOG_LEVEL
          value: "INFO"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: trading-secrets
              key: REDIS_PASSWORD
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: trading-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: trading-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: trading-secrets
              key: POSTGRES_DB
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8088
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8088
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "150m"
          limits:
            memory: "512Mi"
            cpu: "400m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gui-gateway
  namespace: eafix-trading
  labels:
    app.kubernetes.io/name: gui-gateway
    app.kubernetes.io/component: gateway
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/part-of: eafix-trading-system
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: gui-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gui-gateway
        app.kubernetes.io/component: gateway
        app.kubernetes.io/version: "0.1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: gui-gateway
        image: ghcr.io/dicky1987/eafix-modular/gui-gateway:v0.1.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SERVICE_REDIS_URL
          value: "redis://redis:6379"
        - name: SERVICE_LOG_LEVEL
          value: "INFO"
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: trading-secrets
              key: JWT_SECRET_KEY
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: trading-secrets
              key: REDIS_PASSWORD
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: compliance-monitor
  namespace: eafix-trading
  labels:
    app.kubernetes.io/name: compliance-monitor
    app.kubernetes.io/component: compliance
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/part-of: eafix-trading-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: compliance-monitor
  template:
    metadata:
      labels:
        app.kubernetes.io/name: compliance-monitor
        app.kubernetes.io/component: compliance
        app.kubernetes.io/version: "0.1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9201"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: compliance-monitor
        image: ghcr.io/dicky1987/eafix-modular/compliance-monitor:v0.1.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9201
          name: metrics
        env:
        - name: SERVICE_REDIS_URL
          value: "redis://redis:6379"
        - name: SERVICE_LOG_LEVEL
          value: "INFO"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: trading-secrets
              key: REDIS_PASSWORD
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: compliance-secrets
              key: SLACK_WEBHOOK_URL
        - name: PAGERDUTY_SERVICE_KEY
          valueFrom:
            secretKeyRef:
              name: compliance-secrets
              key: PAGERDUTY_SERVICE_KEY
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "150m"
          limits:
            memory: "512Mi"
            cpu: "400m"